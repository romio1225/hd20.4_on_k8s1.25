apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hyperdata-hd-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "{{ .Values.proxy.bodysize }}"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "{{ .Values.proxy.timeout }}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{ .Values.proxy.timeout }}"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "{{ .Values.proxy.timeout }}"
spec:
  ingressClassName: {{ .Values.ingressClassName }}
  tls:
  - secretName: istio.hyperdata-nginx-ingress-nginx
  rules:
  - http:
      paths:
       - path: /hyperdata{{ .Values.version.major }}/(.*)
         pathType: Prefix
         backend:
           service:
             name: hyperdata-svc-hd
             port:
               number: 8080
       - path: /hyperdata(/|$)(.*)
         pathType: Prefix
         backend:
           service:
             name: hyperdata-svc-hd
             port:
               number: 8080
       - path: /api/v1/hyperdata20/(.*)
         pathType: Prefix
         backend:
           service:
             name: hyperdata-svc-hd
             port:
               number: 8081
       - path: /hyperdata-viewer/(.*)
         pathType: Prefix
         backend:
           service:
             name: hyperdata-svc-hd
             port:
               number: 8090
   {{ if and (eq .Values.customAddon.enabled true) ( .Values.customAddon.path) ( .Values.customAddon.externalPort) }}
   - http:
       paths:
       - path: {{ .Values.customAddon.path }}
         pathType: Prefix
         backend:
           service:
             name: hyperdata-external-hd
             port:
               number: {{ .Values.customAddon.externalPort }}
    {{ end }}
